openapi: 3.0.0
paths:
  /api:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  /api/users:
    post:
      operationId: UsersController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        '200':
          description: ''
  /api/users/{id}:
    patch:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/tasks:
    post:
      operationId: TasksController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskDto'
      responses:
        '201':
          description: ''
    get:
      operationId: TasksController_findAll
      parameters: []
      responses:
        '200':
          description: ''
  /api/tasks/{id}:
    get:
      operationId: TasksController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    patch:
      operationId: TasksController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskDto'
      responses:
        '200':
          description: ''
    delete:
      operationId: TasksController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/auth/signin:
    post:
      operationId: AuthController_signin
      parameters: []
      responses:
        '201':
          description: ''
  /api/logout:
    get:
      operationId: BlacklistTokensController_addToken
      parameters:
        - name: authorization
          required: true
          in: header
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - logout
info:
  title: API ESOFT_TASK
  description: Ручки для команды frontend
  version: '1.0'
  contact: {}
tags:
  - name: auth
    description: Авторизация пользователей
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties: {}
    UpdateUserDto:
      type: object
      properties: {}
    CreateTaskDto:
      type: object
      properties: {}
    UpdateTaskDto:
      type: object
      properties: {}
